#!/bin/sh

main () {
	pkg_bare="vim:wget:rsync:git:lynx:openssh:nnn:curl"
	pkg_std="$pkg_bare:ranger:gnupg:markdown:emacs:neomutt:newsboat:isync:imagemagick:ffmpeg:youtube-dl:mpv:sxiv:zsh:acpi:feh:dmenu:sxhkd:zathura:zathura-pdf-mupdf:scrot"
	pkg_extra="$pkg_std:gimp:pandoc:shellcheck:transmission:qemu:guile:poppler:firefox:riot:ranger:w3m:libreoffice:vlc:calcurse"

	if [ -n "$os" ] ; then 
		case "$os" in 
			"OpenBSD") pkg_install_cmd="pkg_add" 
				[ "$USER" != "root" ] && rm -f ~/.cshrc ~/.login ~/.cvsrc ~/.mailrc ~/.profile ~/.Xdefaults 
				pkg_bare="$pkg_bare:colorls" ;; 
			"FreeBSD") pkg_install_cmd="pkg install" ;; 
			"Darwin") pkg_install_cmd="brew install" 
				/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" ;; 
			"ArchLinux") pkg_install_cmd="pacman -S" 
				pkg_bare="$pkg_bare:man-pages:man-db" 
				pkg_std="$pkg_std:xorg-xinput:xorg-xmodmap:xorg-xinit" ;; 
			"AlpineLinux") pkg_install_cmd="apk add" 
				pkg_bare="$pkg_bare:mandoc:man-pages:mandoc-apropos" ;; 
			*) echo "ERROR: Unrecognized OS $os"; print_help ;; 
		esac 
		if [ "$pkg_install" = true ]; then 
			ping -q -c 1 1.1.1.1 >/dev/null || { echo "No internet connection"; exit 1 ; } 
			case "$pkg_level" in 
				"bare") eval "$pkg_install_cmd $(echo "$pkg_bare" | sed "s/:/ /g")" ;; 
				"standard") eval "$pkg_install_cmd $(echo "$pkg_std" | sed "s/:/ /g")" ;; 
				"extra") eval "$pkg_install_cmd $(echo "$pkg_extra" | sed "s/:/ /g")" ;; 
				*) echo "ERROR: Unknown package level $pkg_level" ; print_help ;; 
			esac 
		fi
	fi
}

link_files () { 
	home="$(echo "$PWD" | awk -F '/' '{print "/"$2"/"$3}')" # < doesn't work for root
	find home -type f -name "*" > list.tmp
	awk -v pwd="$PWD" '{print pwd "/" $1}' list.tmp > ./source.tmp
	cut -d '/' -f3- list.tmp | awk -v home="$home" '{print home "/" $1}' > ./dest.tmp

	while IFS="
		" read -r line ; do
		num="$(grep -n "$line" ./dest.tmp | cut -d ':' -f1)"
		dir=${line%/*}
		mkdir -p "$dir"
		ln -sf "$(head -"$num" ./source.tmp | tail -1)" "$(head -"$num" ./dest.tmp | tail -1)"
	done < ./dest.tmp

	rm -f ./list.tmp ./source.tmp ./dest.tmp
}

unlink_files () { 
	home="$(echo "$PWD" | awk -F '/' '{print "/"$2"/"$3}')" # < doesn't work for root
	find ./home/ -type f -name "*" | cut -d '/' -f4- | awk -v home="$home" '{print home "/" $1}' > ./dest.tmp

	while IFS="
		" read -r line ; do
		rm -f "$line"
	done < ./dest.tmp

	rm -f ./dest.tmp
}

upgrade () {
	ping -q -c 1 1.1.1.1 >/dev/null || { echo "No internet connection"; exit ; }
	echo "Hit RET to pwn your local changes; ^C to cancel"
	git fetch --all
	git reset --hard origin/master
}

print_help () { 
	echo "Options: 
	-o <arg> OS name (OpenBSD, FreeBSD, Darwin, ArchLinux, AlpineLinux) 
	-p <arg> Installation type (bare, standard, extra) 
	-i 	 Create symlinks to files in home/
	-u 	 Remove symlinks to files in home/
	-d	 Upgrade from remote"
	exit 1
}

[ $# -eq 0 ] && print_help
os=""
while getopts ":iudp:o:" opt; do
	case $opt in
		o) os="$OPTARG" ;;
		p) pkg_install=true; pkg_level="$OPTARG" ;;
		i) link_files ;;
		u) unlink_files ;;
		d) upgrade ;;
		\?) echo "ERROR: Unrecognized Option"; print_help ;;
	esac
done
shift $((OPTIND -1))

main
