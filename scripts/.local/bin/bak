#!/bin/sh
# Create archives of portions of my home directory and back up the
# whole thing to external drives.  Depends on rsync, borg, and very
# specific drives mounted to very specific directories in /backup.
# FIXME: add backup_remote to my server
# FIXME: look into whether using rsync in batch mode would make sense
# FIXME: use borg to make differential archives of important things

# sudo mkdir -p /backup/backup{1,2} && sudo chown -R `whoami` /backup
# pass machines/storage-luks | tr -d '\n' | xclip -selection clipboard
# sudo cryptsetup open /dev/sdb1 backup1 && sudo mount /dev/mapper/backup1 /backup/backup1
# sudo cryptsetup open /dev/sdc1 backup2 && sudo mount /dev/mapper/backup2 /backup/backup2
# ssh ashur@walden.ulthar.xyz sudo zfs load-key storage/crypt
# bak

set -e

exclude_dirs=".local/go .local/quicklisp .local/share/Trash .cache/paru"

die() { printf "FATAL: %s\n" "$1" >&2; exit 1; }
say() { printf "==========> %s\n" "$1"; }
cmd() { rsync -ax --info=progress2 --delete-after "$@"; }

archive_dirs() {
	mkdir -p "$HOME"/archive/org_archive "$HOME"/archive/secrets_archive
	say "Archiving ~/org:"
	cmd "$HOME"/org/ "$HOME"/archive/org_archive
	say "Archiving ~/secrets:"
	cmd "$HOME"/secrets/ "$HOME"/archive/secrets_archive
}

backup_local() {
	say "Syncing home directory to $(basename "$1"):"
	[ -w "$1" ] || die "Directory $1 must exist and be writable"
	mount | grep "$1" >/dev/null || {
		echo "Disk not mounted on $1, skipping";
		return;
	}
	echo "$exclude_dirs" \
		| sed 's/ /\n/g' \
		| cmd --exclude-from - "$HOME"/ "$1"
}

backup_server() {
	say "Syncing home directory to walden:"
	echo "$exclude_dirs media vms isos" \
		| sed 's/ /\n/g' \
		| cmd --exclude-from - "$HOME"/ ashur@walden.ulthar.xyz:/storage/crypt/laptop_backup
}

archive_dirs
backup_local "/backup/backup1"
backup_local "/backup/backup2"
backup_server
