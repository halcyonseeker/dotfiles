#!/bin/sh
# Create archives of portions of my home directory and back up the
# whole thing to external drives.  Depends on restic and rsync.

set -e

say() { printf "\033[1m==========> %s\033[m\n" "$1"; }

directory_is_accessible() {
	if test "${1#*sftp:}" = "$1"; then
		[ -w "$1" ] || {
			echo "Directory $1 doesn't exist or isn't writable, skipping"
			return 1
		}
		mount | grep "$1" >/dev/null || {
			echo "Disk not mounted on $1, skipping"
			return 1
		}
	fi
	return 0
}

copy_important_dir() {
	trgt="$HOME/archive/$(basename "$1")_archive"
	mkdir -p "$trgt"
	say "Archiving $1"
	rsync -axv --delete-after "$1/" "$trgt/"
}

backup_home_to() {
	say "Backing up home directory to $1:"
	if (directory_is_accessible "$1"); then
		restic -r "$1" \
		       --password-command "pass machines/backup_disks" \
		       backup "$HOME" \
		       --exclude-caches \
		       --exclude "$HOME/.local/go" \
		       --exclude "$HOME/.local/quicklisp" \
		       --exclude "$HOME/.local/share/Trash" \
		       --exclude "$HOME/.cache" \
		       --exclude "$HOME/vms" \
		       --exclude "$HOME/pragnanz*" \
		       --exclude "$HOME/media/piracy"
	else
		return 0
	fi
}

# FIXME: it would also be nice to automatically copy music over to my
# phone's sdcard and back up some files from there, however it's
# formatted with exfat and when mounted all files are set to be owned
# by root instead of inheriting the owner of the mount point.
# Additionally, I had thought that passing `-rlt` to rysnc should get
# archive-ish functionality to the exfat partition without spitting
# errors about nonexistent file permission support, however somewhere
# along the way the file mod times get clobbered so we end up draining
# the card's limited write lifetime with slow, redundant transfers ü§¶‚Äç‚ôÄÔ∏è

copy_important_dir "$HOME/org"
copy_important_dir "$HOME/secrets"
backup_home_to "/backup/backup1"
backup_home_to "/backup/backup2"
backup_home_to "sftp:ash@walden.ulthar.xyz:/tank/laptop_backup"
